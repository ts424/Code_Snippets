/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverse(ListNode head){
        ListNode previous=null;
        ListNode current=head;
        ListNode next=null;
        while(current!=null){
            next=current.next;
            current.next=previous;
            previous=current;
            current=next;
        }
        return previous;
    }

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        l1=reverse(l1);
        l2=reverse(l2);

        ListNode dummy=new ListNode(9999);
        ListNode head=dummy;
        int sum=0,carry=0;
        while(l1!=null||l2!=null||carry!=0){
            sum=(l1!=null?l1.val:0)+(l2!=null?l2.val:0)+carry;
            carry=sum/10;
            sum=sum%10;
            ListNode node=new ListNode(sum);
            head.next=node;
            head=head.next;
            if (l1 != null)
                l1 = l1.next;
            if (l2 != null)
                l2 = l2.next;
        }
        head=reverse(dummy.next);
        return head;

    }
}
